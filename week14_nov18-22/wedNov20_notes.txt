Milestone 11: due Friday


After fall break: POST requests
    one more milestone (#12)
    Monday after fall break: discuss milestone 12, work time
    Wednesday after fall break: review for final
    Friday after fall break: work day
    --> Milestone 12 needs to be checked off in class or office hours


Final exam:
    1:30 section: Wednesday, December 11 11:50 am - 1:40 pm
    2:30 section: Friday, December 13 4:10-6:00 pm

    - it will NOT cover XAML, Razor pages, HTML/CSS
    - only new material since exam 2 is LINQ queries


--> Website competition

--> I need to hire several new CIS 400 TAs for the spring. If you are interested,
    email me to let me know before fall break.



////////////////////////

//suppose items is an IEnumerable<SomeType>


IEnumerable<SomeType> keep = items.Where(item => (some condition about item));


Or could write:
IEnumerable<SomeType> keep = from item in items 
                        where (some condition about item)
                        select item;



//////////////////////

Example: write method that takes an IEnumerable<Person> (each Person has Name, Age),
minAge, maxAge, firstLetter

Return collection of people whose name begins with that letter and age is in
the specified range






Query style:




////////////////////

Example (suppose Employee, Student both extend Person)

write method that takes an IEnumerable<Person> 

Return collection of people who are students





--> what if only Student has a GPA property, and we want all honor roll students
    (at least a 3.5 GPA)


////////////////////

Example: how to revise above method to put in alphabetical order by name?







////////////////////

Why LINQ instead of manual?

will combine into one, is more efficient




////////////////////

Milestone 11 testing.

- price filter (min/max price):
    test correct if both null -> shouldn't filter anything
    test correct if just one null 
    test correct if given both min/max: 
        make sure each item in the result has a price in given range
        make sure each item in menu whose price is in that range is in the result


- cals filter (min/max cals): same idea



- keyword filter (big string that is all the keywords):
    test correct if null or empty -> shouldn't filter anything

    test actual keywords
        Option 1) Try searching the whole menu
        Option 2) Create your own smaller menu (recommended)

            keywords to test: one word, multiple keywords,
                "small tea xyz" - make sure no results
                "small tea" - make sure no other small menu items
                test with all uppercase
                test with mixed case



///////////////////

Milestone 11 UML:

    Index
    Static Menu